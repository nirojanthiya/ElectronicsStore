{"version":3,"sources":["constants/index.js","reducers/index.js","reducers/productReducers.js","reducers/cardReducers.js","reducers/userReducers.js","store.js","actions/productActions.js","components/Message.js","components/Product.js","pages/ProductsListPage.js","pages/ProductDetailsPage.js","actions/cardActions.js","components/DeleteCardComponent.js","components/CreateCardComponent.js","actions/userActions.js","components/ChargeCardComponent.js","components/UserAddressComponent.js","pages/CheckoutPage.js","components/SearchBarForProducts.js","components/Navbar.js","components/PaymentStatus.js","pages/LoginPage.js","pages/RegisterPage.js","pages/CardUpdatePage.js","pages/CardDetailsPage.js","pages/AccountPage.js","pages/AccountUpdatePage.js","pages/DeleteUserAccountPage.js","components/CreateAddressComponent.js","pages/AllAddressesOfUserPage.js","pages/AddressUpdatePage.js","components/GetDate.js","components/SearchBarForOrdersPage.js","pages/OrdersListPage.js","pages/ProductCreatePage.js","pages/ProductUpdatePage.js","pages/NotFoundPage.js","App.js","index.js"],"names":["PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","PRODUCTS_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAIL","CREATE_PRODUCT_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","CHECK_TOKEN_VALID_REQUEST","CHECK_TOKEN_VALID_SUCCESS","CHECK_TOKEN_VALID_FAIL","CHECK_TOKEN_VALID_RESET","CARD_CREATE_REQUEST","CARD_CREATE_SUCCESS","CARD_CREATE_FAIL","CARD_CREATE_RESET","CHARGE_CARD_REQUEST","CHARGE_CARD_SUCCESS","CHARGE_CARD_FAIL","CHARGE_CARD_RESET","SAVED_CARDS_LIST_REQUEST","SAVED_CARDS_LIST_SUCCESS","SAVED_CARDS_LIST_FAIL","DELETE_SAVED_CARD_REQUEST","DELETE_SAVED_CARD_SUCCESS","DELETE_SAVED_CARD_FAIL","UPDATE_STRIPE_CARD_REQUEST","UPDATE_STRIPE_CARD_SUCCESS","UPDATE_STRIPE_CARD_FAIL","UPDATE_STRIPE_CARD_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_DETAILS_REQUEST","UPDATE_USER_DETAILS_SUCCESS","UPDATE_USER_DETAILS_FAIL","UPDATE_USER_DETAILS_RESET","DELETE_USER_ACCOUNT_REQUEST","DELETE_USER_ACCOUNT_SUCCESS","DELETE_USER_ACCOUNT_FAIL","DELETE_USER_ACCOUNT_RESET","GET_USER_ALL_ADDRESSES_REQUEST","GET_USER_ALL_ADDRESSES_SUCCESS","GET_USER_ALL_ADDRESSES_FAIL","GET_SINGLE_ADDRESS_REQUEST","GET_SINGLE_ADDRESS_SUCCESS","GET_SINGLE_ADDRESS_FAIL","GET_SINGLE_ADDRESS_RESET","CREATE_USER_ADDRESS_REQUEST","CREATE_USER_ADDRESS_SUCCESS","CREATE_USER_ADDRESS_FAIL","CREATE_USER_ADDRESS_RESET","UPDATE_USER_ADDRESS_REQUEST","UPDATE_USER_ADDRESS_SUCCESS","UPDATE_USER_ADDRESS_FAIL","UPDATE_USER_ADDRESS_RESET","DELETE_USER_ADDRESS_REQUEST","DELETE_USER_ADDRESS_SUCCESS","DELETE_USER_ADDRESS_FAIL","DELETE_USER_ADDRESS_RESET","GET_ALL_ORDERS_REQUEST","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAIL","CHANGE_DELIVERY_STATUS_REQUEST","CHANGE_DELIVERY_STATUS_SUCCESS","CHANGE_DELIVERY_STATUS_FAIL","CHANGE_DELIVERY_STATUS_RESET","allReducers","combineReducers","productsListReducer","state","products","action","type","loading","error","payload","productDetailsReducer","product","createProductReducer","success","updateProductReducer","deleteProductReducer","createCardReducer","cardData","chargeCardReducer","savedCardsListReducer","stripeCards","updateStripeCardtReducer","stripeCard","deleteSavedCardReducer","data","userLoginReducer","userInfo","userRegisterReducer","getSingleAddressReducer","address","getAllAddressesOfUserReducer","addresses","createUserAddressReducer","updateUserAddressReducer","deleteUserAddressReducer","getAllOrdersReducer","orders","changeDeliveryStatusReducer","checkTokenValidationReducer","valid","userDetailsReducer","user","userDetailsUpdateReducer","deleteUserAccountReducer","middleware","thunk","initialState","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","getProductDetails","id","dispatch","a","axios","get","message","Message","variant","children","Alert","Product","Card","className","Body","to","Img","src","image","height","Title","as","name","Text","price","ProductsListPage","searchTerm","useHistory","location","search","useDispatch","useSelector","useEffect","style","display","Spinner","animation","Row","filter","item","toLowerCase","includes","split","length","map","idx","Col","sm","md","lg","xl","ProductDetailsPage","history","match","useState","show","setShow","handleClose","productDeletionSuccess","params","confirmDelete","getState","config","headers","Authorization","token","delete","response","detail","alert","push","Modal","onHide","Header","closeButton","color","Footer","Button","onClick","Container","admin","width","description","justifyContent","border","borderColor","padding","stock","createCard","cardNumber","post","email","expMonth","expYear","cvc","saveCard","savedCardsList","DeleteCardComponent","userId","deleteCardNumber","runCardDeleteHandler","toggleRunCardDeleteHandler","c_number","card_number","current_year","Date","getFullYear","CreateCardComponent","addressSelected","setRunCardDeleteHandler","differentCard","setDifferentCard","cardDetails","setCardDetails","cardDetailsId","setCardDetailsId","showStripeCard","setShowStripeCard","setEmail","setCardNumber","setExpMonth","setExpYear","setCvc","setSaveCard","showCardDetails","float","position","exp_month","exp_year","window","reload","Form","onSubmit","e","preventDefault","Number","Group","Label","Control","autoFocus","pattern","value","onChange","target","placeholder","maxLength","required","defaultValue","Array","from","x","i","hidden","slice","payWithSavedCard","title","logout","removeItem","checkTokenValidation","details","userDetails","getAllAddress","getSingleAddress","getAllOrders","ChargeCardComponent","selectedAddressId","chargeSuccessfull","chargeError","chargingStatus","pathname","card_data","last4","address_detail","house_no","landmark","city","pin_code","chargeCustomer","disabled","size","role","aria-hidden","phone_number","UserAddressComponent","handleAddressId","CheckoutPage","setAddressSelected","setSelectedAddressId","tokenError","cardCreationError","cardCreationLoading","xs","Image","alt","SearchBarForProducts","setSearchTerm","NavBar","Navbar","bg","expand","collapseOnSelect","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","username","Item","PaymentStatus","useLocation","boughtData","renderData","LoginPage","setUsername","password","setPassword","setItem","stringify","login","controlId","RegisterPage","confirmPassword","setConfirmPassword","setMessage","register","CardUpdatePage","setName","addressCity","setAddressCity","addressCountry","setAddressCountry","addressState","setAddressState","addressZip","setAddressZip","customerId","setCustomerId","cardId","setCardId","customer_id","card_id","name_on_card","address_city","address_country","address_state","address_zip","marginBottom","each","cus_Id","card_Id","c_num","CardDetailsPage","setUserId","setDeleteCardNumber","alignItems","AccountPage","userAccDetails","logoutHandler","AccountUpdatePage","updatedUsername","updatedEmail","userData","put","userUpdateDetails","DeleteUserAccount","myPassword","setMyPassword","userAccountDelete","CreateAddressComponent","toggleCreateAddress","phoneNumber","setPhoneNumber","pinCode","setPinCode","houseNumber","setHouseNumber","setLandmark","setCity","setState","addressCreationSuccess","errorCreatingAddress","addressData","createUserAddress","InputGroup","AllAddressesOfUserPage","deleteAddress","setDeleteAddress","createAddress","setCreateAddress","loadingAllAddresses","addressDeletionSuccess","deleteAddressHandler","deleteUserAddress","AddressUpdatePage","errorFetchingAddress","addressUpdateSuccess","updatedAddress","dateCheck","param","dateValue","monthValue","yearValue","SearchBarForOrdersPage","handleSearchTerm","placeholderValue","OrdersListPage","todays_date","toISOString","currentDateInfo","idOfchangeDeliveryStatus","setIdOfchangeDeliveryStatus","cloneSearchTerm","setCloneSearchTerm","loadingOrders","deliveryStatusChangeSuccess","deliveryStatusChangeSpinner","changeDeliveryStatusHandler","status","changeDeliveryStatus","term","Table","striped","bordered","ordered_item","order","paid_status","paid_at","total_price","is_delivered","delivered_at","ProductCreatePage","setDescription","setPrice","setStock","setImage","productCreationSuccess","productCreationError","form_data","FormData","append","createProduct","step","files","ProductUpdatePage","loadingPageDetails","newImage","setNewImage","productUpdationSuccess","loadingProductUpdations","productUpdationError","scrollTo","top","behavior","productId","updateProduct","defaultChecked","NotFoundPage","App","path","component","ProductListPage","exact","Login","Register","DeleteUserAccountPage","NotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df6db103.chunk.js","sourcesContent":["// products list\nexport const PRODUCTS_LIST_REQUEST = \"PRODUCTS_LIST_REQUEST\" \nexport const PRODUCTS_LIST_SUCCESS = \"PRODUCTS_LIST_SUCCESS\"\nexport const PRODUCTS_LIST_FAIL = \"PRODUCTS_LIST_FAIL\"\n\n// product details\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\" \nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\n\n// create product\nexport const CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\" \nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\" \nexport const CREATE_PRODUCT_FAIL = \"CREATE_PRODUCT_FAIL\" \nexport const CREATE_PRODUCT_RESET = \"CREATE_PRODUCT_RESET\" \n\n// update product\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\" \nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\" \nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\" \nexport const UPDATE_PRODUCT_RESET = \"UPDATE_PRODUCT_RESET\" \n\n// delete product\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\" \nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\" \nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\" \nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\" \n\n// check token validation\nexport const CHECK_TOKEN_VALID_REQUEST = \"CHECK_TOKEN_VALID_REQUEST\"\nexport const CHECK_TOKEN_VALID_SUCCESS = \"CHECK_TOKEN_VALID_SUCCESS\"\nexport const CHECK_TOKEN_VALID_FAIL = \"CHECK_TOKEN_VALID_FAIL\"\nexport const CHECK_TOKEN_VALID_RESET = \"CHECK_TOKEN_VALID_RESET\"\n\n// create card\nexport const CARD_CREATE_REQUEST = \"CARD_CREATE_REQUEST\" \nexport const CARD_CREATE_SUCCESS = \"CARD_CREATE_SUCCESS\"\nexport const CARD_CREATE_FAIL = \"CARD_CREATE_FAIL\"\nexport const CARD_CREATE_RESET = \"CARD_CREATE_RESET\"\n\n// charge card\nexport const CHARGE_CARD_REQUEST = \"CHARGE_CARD_REQUEST\" \nexport const CHARGE_CARD_SUCCESS = \"CHARGE_CARD_SUCCESS\"\nexport const CHARGE_CARD_FAIL = \"CHARGE_CARD_FAIL\"\nexport const CHARGE_CARD_RESET = \"CHARGE_CARD_RESET\"\n\n// saved cards list\nexport const SAVED_CARDS_LIST_REQUEST = \"SAVED_CARDS_LIST_REQUEST\"\nexport const SAVED_CARDS_LIST_SUCCESS = \"SAVED_CARDS_LIST_SUCCESS\"\nexport const SAVED_CARDS_LIST_FAIL = \"SAVED_CARDS_LIST_FAIL\"\n\n// delete saved card\nexport const DELETE_SAVED_CARD_REQUEST = \"DELETE_SAVED_CARD_REQUEST\"\nexport const DELETE_SAVED_CARD_SUCCESS = \"DELETE_SAVED_CARD_SUCCESS\"\nexport const DELETE_SAVED_CARD_FAIL = \"DELETE_SAVED_CARD_FAIL\"\n\n// update saved card\nexport const UPDATE_STRIPE_CARD_REQUEST = \"UPDATE_STRIPE_CARD_REQUEST\"\nexport const UPDATE_STRIPE_CARD_SUCCESS = \"UPDATE_STRIPE_CARD_SUCCESS\"\nexport const UPDATE_STRIPE_CARD_FAIL = \"UPDATE_STRIPE_CARD_FAIL\"\nexport const UPDATE_STRIPE_CARD_RESET = \"UPDATE_STRIPE_CARD_RESET\"\n\n// user login/logout\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\nexport const USER_LOGOUT = \"USER_LOGOUT\"\n\n// user registration/signup\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\n\n// user info/details\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\n\n// user update details\nexport const UPDATE_USER_DETAILS_REQUEST = \"UPDATE_USER_DETAILS_REQUEST\"\nexport const UPDATE_USER_DETAILS_SUCCESS = \"UPDATE_USER_DETAILS_SUCCESS\"\nexport const UPDATE_USER_DETAILS_FAIL = \"UPDATE_USER_DETAILS_FAIL\"\nexport const UPDATE_USER_DETAILS_RESET = \"UPDATE_USER_DETAILS_RESET\"\n\n// delete user account\nexport const DELETE_USER_ACCOUNT_REQUEST = \"DELETE_USER_ACCOUNT_REQUEST\" \nexport const DELETE_USER_ACCOUNT_SUCCESS = \"DELETE_USER_ACCOUNT_SUCCESS\" \nexport const DELETE_USER_ACCOUNT_FAIL = \"DELETE_USER_ACCOUNT_FAIL\" \nexport const DELETE_USER_ACCOUNT_RESET = \"DELETE_USER_ACCOUNT_RESET\" \n\n// user all address\nexport const GET_USER_ALL_ADDRESSES_REQUEST = \"GET_USER_ALL_ADDRESSES_REQUEST\"\nexport const GET_USER_ALL_ADDRESSES_SUCCESS = \"GET_USER_ALL_ADDRESSES_SUCCESS\"\nexport const GET_USER_ALL_ADDRESSES_FAIL = \"GET_USER_ALL_ADDRESSES_FAIL\"\n\n// user single address details\nexport const GET_SINGLE_ADDRESS_REQUEST = \"GET_SINGLE_ADDRESS_REQUEST\"\nexport const GET_SINGLE_ADDRESS_SUCCESS = \"GET_SINGLE_ADDRESS_SUCCESS\"\nexport const GET_SINGLE_ADDRESS_FAIL = \"GET_SINGLE_ADDRESS_FAIL\"\nexport const GET_SINGLE_ADDRESS_RESET = \"GET_SINGLE_ADDRESS_RESET\"\n\n// create address\nexport const CREATE_USER_ADDRESS_REQUEST = \"CREATE_USER_ADDRESS_REQUEST\"\nexport const CREATE_USER_ADDRESS_SUCCESS = \"CREATE_USER_ADDRESS_SUCCESS\"\nexport const CREATE_USER_ADDRESS_FAIL = \"CREATE_USER_ADDRESS_FAIL\"\nexport const CREATE_USER_ADDRESS_RESET = \"CREATE_USER_ADDRESS_RESET\"\n\n// update address\nexport const UPDATE_USER_ADDRESS_REQUEST = \"UPDATE_USER_ADDRESS_REQUEST\"\nexport const UPDATE_USER_ADDRESS_SUCCESS = \"UPDATE_USER_ADDRESS_SUCCESS\"\nexport const UPDATE_USER_ADDRESS_FAIL = \"UPDATE_USER_ADDRESS_FAIL\"\nexport const UPDATE_USER_ADDRESS_RESET = \"UPDATE_USER_ADDRESS_RESET\"\n\n// delete user address\nexport const DELETE_USER_ADDRESS_REQUEST = \"DELETE_USER_ADDRESS_REQUEST\"\nexport const DELETE_USER_ADDRESS_SUCCESS = \"DELETE_USER_ADDRESS_SUCCESS\"\nexport const DELETE_USER_ADDRESS_FAIL = \"DELETE_USER_ADDRESS_FAIL\"\nexport const DELETE_USER_ADDRESS_RESET = \"DELETE_USER_ADDRESS_RESET\"\n\n// all orders list\nexport const GET_ALL_ORDERS_REQUEST = \"GET_ALL_ORDERS_REQUEST\"\nexport const GET_ALL_ORDERS_SUCCESS = \"GET_ALL_ORDERS_SUCCESS\"\nexport const GET_ALL_ORDERS_FAIL = \"GET_ALL_ORDERS_FAIL\"\n\n// change order delivery status\nexport const CHANGE_DELIVERY_STATUS_REQUEST = \"CHANGE_DELIVERY_STATUS_REQUEST\"\nexport const CHANGE_DELIVERY_STATUS_SUCCESS = \"CHANGE_DELIVERY_STATUS_SUCCESS\"\nexport const CHANGE_DELIVERY_STATUS_FAIL = \"CHANGE_DELIVERY_STATUS_FAIL\"\nexport const CHANGE_DELIVERY_STATUS_RESET = \"CHANGE_DELIVERY_STATUS_RESET\"","import { combineReducers } from \"redux\";\nimport {\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    changeDeliveryStatusReducer,\n} from \"./productReducers\";\n\nimport {\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    deleteSavedCardReducer,\n    updateStripeCardtReducer\n} from \"./cardReducers\";\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n    checkTokenValidationReducer,\n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n} from \"./userReducers\";\n\nconst allReducers = combineReducers({\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    updateStripeCardtReducer,\n    deleteSavedCardReducer,\n    userLoginReducer,\n    userRegisterReducer,    \n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n    changeDeliveryStatusReducer,\n    checkTokenValidationReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n})\n\n\nexport default allReducers","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n    CREATE_PRODUCT_RESET,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_RESET,\n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    DELETE_PRODUCT_RESET,\n\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n    CHANGE_DELIVERY_STATUS_RESET,\n\n\n} from '../constants/index'\n\n\n// products list\nexport const productsListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCTS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                products: [],   // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCTS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                products: action.payload,\n                error: \"\"\n            }\n        case PRODUCTS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\n// product details\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},        // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                product: action.payload,\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// create product reducer\nexport const createProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case CREATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case CREATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update product reducer\nexport const updateProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case UPDATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete product reducer\nexport const deleteProductReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DELETE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// change order delivery status reducer\nexport const changeDeliveryStatusReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHANGE_DELIVERY_STATUS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHANGE_DELIVERY_STATUS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n    CARD_CREATE_RESET,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n    CHARGE_CARD_RESET,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n    UPDATE_STRIPE_CARD_RESET,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n} from '../constants/index'\n\n\n// create card reducer\nexport const createCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_CREATE_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                cardData: {},\n                success: false,\n                error: \"\"\n            }\n        case CARD_CREATE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                cardData: action.payload,\n                error: \"\"\n            }\n        case CARD_CREATE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                cardData: {},\n                success: false,\n                error: action.payload\n            }\n        case CARD_CREATE_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                cardData: {},\n                error: \"\",\n            }\n        default:\n            return state\n    }\n}\n\n// charge card reducer\nexport const chargeCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHARGE_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHARGE_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHARGE_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHARGE_CARD_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// saved cards list reducer\nexport const savedCardsListReducer = (state = {stripeCards: []}, action) => {\n    switch (action.type) {\n        case SAVED_CARDS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                stripeCards: action.payload,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// update stripe card reducer\nexport const updateStripeCardtReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_STRIPE_CARD_REQUEST:\n            return {\n                loading: true,\n                success: false,\n                stripeCard: {},\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                stripeCard: action.payload,\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_FAIL:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: action.payload\n            }\n        case UPDATE_STRIPE_CARD_RESET:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete saved card reducer\nexport const deleteSavedCardReducer = (state = {data: {}}, action) => {\n    switch (action.type) {\n        case DELETE_SAVED_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                data: action.payload,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n    UPDATE_USER_DETAILS_RESET,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n    DELETE_USER_ACCOUNT_RESET,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n    GET_SINGLE_ADDRESS_RESET,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n    CREATE_USER_ADDRESS_RESET,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n    UPDATE_USER_ADDRESS_RESET,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n    DELETE_USER_ADDRESS_RESET,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n    CHECK_TOKEN_VALID_RESET,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\n\n// Login\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_LOGIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Register\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_REGISTER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_REGISTER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n// user details reducer\nexport const userDetailsReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                error: \"\"\n            }\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                user: action.payload,\n                error: \"\"\n            }\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                user: {},\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// user details update reducer\nexport const userDetailsUpdateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                user: action.payload,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: action.payload\n            }\n        case UPDATE_USER_DETAILS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user account reducer\nexport const deleteUserAccountReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ACCOUNT_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ACCOUNT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// check token validation reducer\nexport const checkTokenValidationReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CHECK_TOKEN_VALID_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                valid: false,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                valid: true,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_FAIL:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: action.payload\n            }\n        case CHECK_TOKEN_VALID_RESET:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n\n// get all addresses of user reducer\nexport const getAllAddressesOfUserReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_USER_ALL_ADDRESSES_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                addresses: [],\n                success: false,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                addresses: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_FAIL:\n            return {\n                ...state,\n                loading: false,\n                addresses: [],\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// get single address reducer\nexport const getSingleAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_SINGLE_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: action.payload\n            }\n        case GET_SINGLE_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// create user address\nexport const createUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CREATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: action.payload\n            }\n        case CREATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update user address\nexport const updateUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case UPDATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user address reducer\nexport const deleteUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// get all orders reducer\nexport const getAllOrdersReducer = (state = {orders: []}, action) => {\n    switch(action.type) {\n        case GET_ALL_ORDERS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                orders: [],\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                orders: action.payload,\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                orders: [],\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {createStore, applyMiddleware} from 'redux'\nimport { composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport allReducers from './reducers/index'\n\nconst middleware = [thunk]\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nlet initialState = {\n    userLoginReducer: { userInfo: userInfoFromStorage }\n}\n\nconst store = createStore(allReducers, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n\n// products list\nexport const getProductsList = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCTS_LIST_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(\"/api/products/\")\n\n        dispatch({\n            type: PRODUCTS_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCTS_LIST_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// product details\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(`/api/product/${id}/`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// create product\nexport const createProduct = (product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CREATE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/api/product-create/\",\n            product,\n            config\n        )\n\n        dispatch({\n            type: CREATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: CREATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// delete product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.delete(\n            `/api/product-delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// update product\nexport const updateProduct = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: UPDATE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `/api/product-update/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// change ordered product delivery status\nexport const changeDeliveryStatus = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `/account/change-order-status/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport React from 'react'\n\nfunction Product({ product }) {\n    return (\n        <div>\n            <Card className=\"mb-4 rounded\">\n\n                <Card.Body>\n                <Link to={`/product/${product.id}`}>\n                    <Card.Img variant=\"top\" src={product.image} height=\"162\" />\n                </Link>\n                    <Link to={`/product/${product.id}`}>\n                        <Card.Title as=\"div\">\n                            <strong>{product.name}</strong>\n                        </Card.Title>\n                    </Link>\n\n                    <Card.Text as=\"h3\">\n                        ₹ {product.price}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Product\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductsList } from '../actions/productActions'\nimport Message from '../components/Message'\nimport { Spinner, Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { useHistory } from \"react-router-dom\";\nimport { CREATE_PRODUCT_RESET } from '../constants'\n\n\nfunction ProductsListPage() {\n\n    let history = useHistory()\n    let searchTerm = history.location.search\n    const dispatch = useDispatch()\n\n    // products list reducer\n    const productsListReducer = useSelector(state => state.productsListReducer)\n    const { loading, error, products } = productsListReducer\n\n    useEffect(() => {\n        dispatch(getProductsList())\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n        //dispatch(checkTokenValidation())\n    }, [dispatch])\n\n    const showNothingMessage = () => {\n        return (\n            <div>\n                {!loading ? <Message variant='info'>Nothing to show</Message> : \"\"}                \n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Products</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            <div>\n                <Row>\n\n                    {/* If length of the filter result is equal to 0 then show 'nothing found' message\n                        with help of showNothingMessage function else show the filtered result on the\n                        webpage and then run the map function */}\n\n                    {(products.filter((item) =>\n                        item.name.toLowerCase().includes(searchTerm !== \"\" ? searchTerm.split(\"=\")[1] : \"\")\n                    )).length === 0 ? showNothingMessage() : (products.filter((item) =>\n                        item.name.toLowerCase().includes(searchTerm !== \"\" ? searchTerm.split(\"=\")[1] : \"\")\n                    )).map((product, idx) => (\n                        <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\n                            <div className=\"mx-2\"> \n                                <Product product={product} />\n                            </div>\n                        </Col>\n                    )\n                    )}\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductsListPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteProduct, getProductDetails } from '../actions/productActions'\nimport Message from '../components/Message'\nimport { Spinner, Row, Col, Container, Card, Button, Modal } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { CREATE_PRODUCT_RESET, DELETE_PRODUCT_RESET, UPDATE_PRODUCT_RESET, CARD_CREATE_RESET } from '../constants'\n\n\nfunction ProductDetailsPage({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading, error, product } = productDetailsReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // product details reducer\n    const deleteProductReducer = useSelector(state => state.deleteProductReducer)\n    const { success: productDeletionSuccess } = deleteProductReducer\n\n    useEffect(() => {\n        dispatch(getProductDetails(match.params.id))\n        dispatch({\n            type: UPDATE_PRODUCT_RESET\n        })\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n        dispatch({\n            type: CARD_CREATE_RESET\n        })\n    }, [dispatch, match])\n\n    // product delete confirmation\n    const confirmDelete = () => {\n        dispatch(deleteProduct(match.params.id))\n        handleClose()\n    }\n\n    // after product deletion\n    if (productDeletionSuccess) {\n        alert(\"Product successfully deleted.\")\n        history.push(\"/\")\n        dispatch({\n            type: DELETE_PRODUCT_RESET\n        })\n    }\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                            {\" \"}\n                            Delete Confirmation\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Are you sure you want to delete this product <em>\"{product.name}\"</em>?</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => confirmDelete()}>\n                            Confirm Delete\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleClose}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n            {/* Modal End */}\n\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Product Details</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {error ? <Message variant='danger'>{error}</Message>\n                :\n                <div>\n                    <Container>\n                        <Row>\n                            <Col md={6}>\n                                <Card.Img variant=\"top\" src={product.image} height=\"420\" />\n\n                                {/* Product edit and delete conditions */}\n\n                                {userInfo && userInfo.admin ?\n                                    <span style={{ display: \"flex\" }}>\n                                        < button\n                                            className=\"btn mt-2 btn-danger btn-sm button-focus-css\"\n                                            style={{ width: \"100%\" }}\n                                            onClick={() => handleShow()}\n                                        >Delete Product\n                                        </button>\n\n                                        <button\n                                            className=\"ml-2 mt-2 btn btn-primary btn-sm button-focus-css\"\n                                            onClick={() => history.push(`/product-update/${product.id}/`)}\n                                            style={{ width: \"100%\" }}\n                                        >Edit Product\n                                        </button>\n                                    </span>\n                                    : \"\"}\n                            </Col>\n\n                            <Col sm>\n                                <b>{product.name}</b>\n                                <hr />\n                                <span className=\"justify-description-css\">\n                                    <p>{product.description}</p>\n                                </span>\n                                <span style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    border: \"1px solid\",\n                                    borderColor: \"#C6ACE7\",\n                                    padding: \"2px\"\n                                }}>\n                                    Price:<span className=\"text-success ml-2\">₹ {product.price}</span>\n                                </span>\n                            </Col>\n                            <Col sm>\n                                <b>Buy</b>\n                                <hr />\n                                {product.stock ?\n                                    <Link to={`${product.id}/checkout/`}>\n                                        <button className=\"btn btn-primary\">\n                                            <span>Pay with Stripe</span>\n                                        </button>\n                                    </Link>\n                                    :\n                                    <Message variant='danger'>\n                                        Out Of Stock!\n                                    </Message>}\n                            </Col>\n                        </Row>\n\n                    </Container>\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default ProductDetailsPage\n","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n// create card\nexport const createCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CARD_CREATE_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n                \"Card-Number\": cardData.cardNumber,\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/create-card/\",\n            {\n                'email': cardData.email,\n                'number': cardData.cardNumber,\n                'exp_month': cardData.expMonth,\n                'exp_year': cardData.expYear,\n                'cvc': cardData.cvc,\n                'save_card': cardData.saveCard\n            },\n            config\n        )\n\n        dispatch({\n            type: CARD_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_CREATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// charge customer\nexport const chargeCustomer = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CHARGE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/charge-customer/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: CHARGE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHARGE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// saved cards list\nexport const savedCardsList = () => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: SAVED_CARDS_LIST_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.get('/account/stripe-cards/', config)\n\n        dispatch({\n            type: SAVED_CARDS_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SAVED_CARDS_LIST_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// update stripe card\nexport const updateStripeCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/update-card/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_STRIPE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n\n// delete saved card\nexport const deleteSavedCard = (card_number) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: DELETE_SAVED_CARD_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            '/payments/delete-card/',\n            { \"card_number\": card_number },\n            config\n        )\n\n        dispatch({\n            type: DELETE_SAVED_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_SAVED_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { deleteSavedCard } from '../actions/cardActions'\nimport { useDispatch } from 'react-redux'\nimport { Modal } from 'react-bootstrap'\n\n\nfunction DeleteCardComponent({ userId, deleteCardNumber, runCardDeleteHandler, toggleRunCardDeleteHandler }) {\n\n    const dispatch = useDispatch()\n\n    // card delete confirmation\n    const confirmDelete = (c_number) => {\n        dispatch(deleteSavedCard(c_number))\n        toggleRunCardDeleteHandler()\n    }\n\n    return (\n        <div>\n            {/* Modal Start*/}\n            <div>\n                <Modal show={runCardDeleteHandler} onHide={toggleRunCardDeleteHandler}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                            {\" \"}\n                            Delete Confirmation\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>\n                            <b>\n                                Warning!\n                            </b>\n                            {\" \"}deleting your card will delete your stripe account and all its data.\n                        </p>\n                        Are you sure you want to delete the card \"{deleteCardNumber}\"?\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => confirmDelete(deleteCardNumber)}>\n                            Confirm Delete\n                        </Button>\n                        <Button variant=\"primary\" onClick={toggleRunCardDeleteHandler}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n            {/* Modal End */}\n        </div>\n    )\n}\n\nexport default DeleteCardComponent\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { createCard } from '../actions/cardActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from './Message';\nimport DeleteCardComponent from './DeleteCardComponent';\n\n// to manage our exp month and exp year\nlet todays_date = new Date()\nlet current_year = todays_date.getFullYear()\n\n\nconst CreateCardComponent = ({ stripeCards, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [userId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [differentCard, setDifferentCard] = useState(false)\n    const [cardDetails, setCardDetails] = useState(false)\n    const [cardDetailsId, setCardDetailsId] = useState(0)\n    const [showStripeCard, setShowStripeCard] = useState(false)\n    const [deleteCardNumber] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [cvc, setCvc] = useState(\"\")\n    const [saveCard, setSaveCard] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // card delete reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { loading, success, error } = deleteSavedCardReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n    }, [history, userInfo, success])\n\n    // stripe card form submission handler\n    const handleCardSubmittion = (e) => {\n        e.preventDefault()\n        if (addressSelected) {\n            const data = {\n                \"email\": email === \"\" ? userInfo.email : email,\n                \"cardNumber\": cardNumber,\n                \"expMonth\": expMonth ? Number(expMonth) : \"\",\n                \"expYear\": expYear ? Number(expYear) : \"\",\n                \"cvc\": cvc ? Number(cvc) : \"\",\n                \"saveCard\": saveCard\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // pay with already existing (saved) stripe card handler\n    const payWithSavedCard = (cardData) => {\n        if (addressSelected) {\n            const data = {\n                \"email\": cardData.email,\n                \"cardNumber\": cardData.card_number,\n                \"expMonth\": Number(cardData.exp_month),\n                \"expYear\": Number(cardData.exp_year),\n                \"cvc\": Number(cardData.cvc),\n                \"saveCard\": false\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // show card details\n    const showCardDetails = (cardData) => {\n        if (cardDetails) {\n            if (cardData.id === cardDetailsId) {\n                return (\n                    <div>\n                        <button\n                            onClick={() => setCardDetails(false)}\n                            className=\"btn btn-outline-danger btn-sm button-focus-css\"\n                            style={{ float: \"right\", position: \"relative\", \"top\": \"-40px\" }}>\n                            close\n                        </button>\n                        <p><b>Exp Month:</b> {cardData.exp_month}</p>\n                        <p><b>Exp Year:</b> {cardData.exp_year}</p>                       \n                    </div>\n                )\n            }\n        }\n    }\n\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    // reload the webpage after new card deletion\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n\n            {/* Working on Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {/* Working on Modal End */}\n\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Deleting card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {error && <Message variant='danger'>{error}</Message>}\n            <div className=\"card px-4 py-4\">\n                <button className={showStripeCard\n                    ? \"btn btn-sm btn-danger mb-3 button-focus-css\"\n                    : \"btn btn-sm btn-primary mb-3 button-focus-css\"}\n                    onClick={() =>\n                        setShowStripeCard(!showStripeCard)\n                    }>\n                    {showStripeCard\n                        ? \"close\"\n                        : \"Enter stripe card\"}\n                </button>\n\n                {showStripeCard ?\n                    <Form onSubmit={handleCardSubmittion}>\n\n                        {differentCard ?\n                            <Form.Group>\n                                <Form.Label><b>Card Holder Email Address</b></Form.Label>\n                                <Form.Control\n                                    autoFocus={true}\n                                    type=\"email\"\n                                    pattern=\".+@gmail\\.com\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    placeholder=\"Email address linked with the Card\" />\n                            </Form.Group>\n                            :\n                            <span><b>Default Customer Email: </b>{userInfo.email}</span>\n                        }\n                        <p>\n                            <Link to=\"#\" onClick={() => {\n                                setDifferentCard(!differentCard)\n                                setEmail(\"\")\n                            }}>\n                                {differentCard ? \"Use Your default Email\" : \"Use a different Card\"}\n                            </Link>\n                        </p>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label><b>Card Number</b></Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                pattern=\"[0-9]+\"\n                                value={cardNumber}\n                                onChange={(e) => setCardNumber(e.target.value)}\n                                placeholder=\"Enter Your Card Number\" maxLength=\"16\"\n                                required\n                            />\n                        </Form.Group>\n\n                        <Row>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Month</b></Form.Label>\n                                    <select\n                                        className=\"form-control\"\n                                        defaultValue={expMonth}\n                                        onChange={e => setExpMonth(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 12 }, (x, i) => <option\n                                            key={i}\n                                        >\n                                            {i + 1}\n                                        </option>\n                                        )}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Year</b></Form.Label>\n                                    <select className=\"form-control\"\n                                        defaultValue={expYear}\n                                        onChange={e => setExpYear(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 21 }, (x, i) => <option\n                                            key={i}\n                                        >{current_year + i}</option>)}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>CVC Number</b></Form.Label>\n                                    <Form.Control\n                                        type=\"numbers\"\n                                        onChange={(e) => setCvc(e.target.value)}\n                                        placeholder=\"123\" \n                                        maxLength=\"3\"\n                                        pattern=\"[0-9]+\"\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n\n                        <Form.Text className=\"text-muted pb-2\">\n                            <span style={{ display: \"flex\" }}>\n                                <input\n                                    hidden={differentCard}\n                                    type=\"checkbox\"\n                                    className=\"mt-1\"\n                                    value={differentCard ? false : saveCard}\n                                    onChange={() => setSaveCard(!saveCard)}\n                                />\n                                <span hidden={differentCard} className=\"ml-1\">Save my card for future payments</span>\n                            </span>\n                        </Form.Text>\n\n                        <Button className=\"btn-sm button-focus-css\" variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                    : \"\"}\n\n            </div>\n\n            <div className=\"my-4 card px-4 py-4\">\n                <h5>Saved card</h5>\n                {stripeCards.length > 0 ?\n                    stripeCards.map(cardData => (\n                        <div key={cardData.id}>\n                            <Card\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                                className=\"p-2\">\n                                <p><b>Card Number:</b> XXXX XXXX XXXX {cardData.card_number.slice(12,18)}</p>\n                                <div>\n                                    {showCardDetails(cardData)}\n                                    <button onClick={() => {\n                                        setCardDetails(true)\n                                        setCardDetailsId(cardData.id)\n                                    }} className=\"btn btn-sm btn-outline-primary button-focus-css\"\n                                    >\n                                        Show Card Details\n                                    </button>\n                                    <button onClick={() => payWithSavedCard(cardData)}\n                                        className=\"ml-2 btn btn-sm btn-outline-primary button-focus-css\">\n                                        Pay with this Card\n                                    </button>\n                                </div>\n                            </Card>\n\n                            {/* Edit Card Buttton */}\n\n                            <span\n                                onClick={() => history.push(\"/stripe-card-details/\")}>\n                                <i\n                                    title=\"edit card\"\n                                    className=\"fas fa-edit fa-lg edit-button-css mr-2\"\n                                ></i>\n                            </span>\n                        </div>\n                    )) : \"No saved card.\"}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateCardComponent\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    CARD_CREATE_RESET,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n// Login\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/account/login/',\n            { 'username': username, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data)) // will create a new key-value pair in localStorage\n        // also see store.js file\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// Logout\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n    dispatch({\n        type: CARD_CREATE_RESET\n    })\n}\n\n// register\nexport const register = (username, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/account/register/`,\n            { 'username': username, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    }\n    catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// check token validation\nexport const checkTokenValidation = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\"/payments/check-token/\", config)\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHECK_TOKEN_VALID_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n\n// user details\nexport const userDetails = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(`/account/user/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// user update details\nexport const userUpdateDetails = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `/account/user_update/${userInfo.id}/`,\n            {\n                \"username\": userData.username,\n                \"email\": userData.email,\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// user account delete\nexport const userAccountDelete = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            `/account/user_delete/${userData.id}/`,\n            {\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ACCOUNT_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user address\nexport const getAllAddress = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            \"/account/all-address-details/\",\n            config\n        )\n\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user single address\nexport const getSingleAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `/account/address-details/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: GET_SINGLE_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// create user address\nexport const createUserAddress = (addressData) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CREATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            \"/account/create-address/\",\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: CREATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// update user address\nexport const updateUserAddress = (id, addressData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `/account/update-address/${id}/`,\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// delete user address\nexport const deleteUserAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.delete(\n            `/account/delete-address/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// get all orders\nexport const getAllOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_ALL_ORDERS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `/account/all-orders-list/`,\n            config\n        )\n\n        dispatch({\n            type: GET_ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_ALL_ORDERS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner, Form, Button, Card } from 'react-bootstrap'\nimport { chargeCustomer } from '../actions/cardActions'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getSingleAddress } from '../actions/userActions'\nimport Message from './Message'\n\n\nconst ChargeCardComponent = ({ product, match, selectedAddressId, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { cardData } = createCardReducer\n\n    // charge card reducer\n    const chargeCardReducer = useSelector(state => state.chargeCardReducer)\n    const { success: chargeSuccessfull, error: chargeError, loading: chargingStatus } = chargeCardReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address } = getSingleAddressReducer\n\n    useEffect(() => {\n        dispatch(getSingleAddress(selectedAddressId))\n    }, [dispatch, match, selectedAddressId])\n\n    // charge card handler\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const address_detail = `${address.house_no}, near ${address.landmark}, ${address.city}, \n        ${address.state}, ${address.pin_code}`\n        const data = {\n            \"email\": cardData.email,\n            \"source\": cardData.id,\n            \"amount\": product.price,\n            \"name\": address.name,\n            \"card_number\": cardData.card_data.last4,\n            \"address\": address_detail,\n            \"ordered_item\": product.name,\n            \"paid_status\": true,\n            \"total_price\": product.price,\n            \"is_delivered\": false,\n            \"delivered_at\": \"Not Delivered\",\n        }\n        dispatch(chargeCustomer(data))\n    }\n\n    if (chargeSuccessfull) {\n        history.push({\n            pathname: '/payment-status/',\n            state: { detail: product }\n        })\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {chargeError ? <Message variant=\"danger\">{chargeError}</Message> : \"\"}\n            <span className=\"text-info\">\n                <h5>Confirm payment</h5>\n            </span>\n            <div className=\"mb-2\">\n                Using Card: XXXX XXXX XXXX {cardData.card_data.last4}\n            </div>\n            <Form onSubmit={onSubmit}>\n\n                {chargingStatus ?\n                    <Button variant=\"primary\" disabled style={{ width: \"100%\" }}>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"grow\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                        {\" \"}Processing Payment...\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\" }}>\n                        Pay ₹{product.price}\n                    </Button>\n                }\n            </Form>\n\n            <Card\n                className=\"p-2 mt-2 mb-2\"\n                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                {address ?\n                    <div>\n                        <span className=\"text-info\">\n                            <b><em>Will be delievered at this address</em></b>\n                        </span>\n                        <p></p>\n                        <p><b>Name: </b>{address ? address.name : \"\"}</p>\n                        <p><b>Phone Number: </b>{address ? address.phone_number : \"\"}</p>\n                        <p><b>House Number: </b>{address ? address.house_no : \"\"}</p>\n                        <p><b>Landmark: </b>{address ? address.landmark : \"\"}</p>\n                        <p><b>City: </b>{address ? address.city : \"\"}</p>\n                        <p><b>State: </b>{address ? address.state : \"\"}</p>\n                        <p><b>Pin Code/Zip Code: </b>{address ? address.pin_code : \"\"}</p>\n                    </div>\n                    :\n                    \"\"\n                }\n            </Card>\n            <Link to=\"#\" onClick={() => window.location.reload()}>Select a different card to pay</Link>\n\n        </div >\n    )\n}\n\nexport default ChargeCardComponent\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card } from 'react-bootstrap'\nimport { getAllAddress } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction UserAddressComponent({ handleAddressId }) {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const updatehandleAddressId = (id) => {\n        handleAddressId(id)\n    }\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses } = getAllAddressesOfUserReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(getAllAddress())\n        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            {addresses ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <input\n                            type=\"radio\"\n                            name=\"addressId\"\n                            value={0}\n                            onClick={() => updatehandleAddressId(address.id)}\n                        />                        \n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Address: </b>\n                        {address.house_no}, {address.landmark}, {address.city}, \n                        {address.state}, {address.pin_code}</span>\n                    </Card>\n                </div>\n            ))\n                :\n                \"empty\"\n            }\n\n        </div >\n    )\n}\n\nexport default UserAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Row, Col, Container, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductDetails } from '../actions/productActions'\nimport CreateCardComponent from '../components/CreateCardComponent'\nimport ChargeCardComponent from '../components/ChargeCardComponent'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { savedCardsList } from '../actions/cardActions'\nimport UserAddressComponent from '../components/UserAddressComponent'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport {CHARGE_CARD_RESET} from '../constants/index'\n\nconst CheckoutPage = ({ match }) => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [addressSelected, setAddressSelected] = useState(false)\n    const [selectedAddressId, setSelectedAddressId] = useState(0)\n\n    // set address id handler\n    const handleAddressId = (id) => {\n        if (id) {\n            setAddressSelected(true)\n        }\n        setSelectedAddressId(id)\n    }\n      \n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading, error, product } = productDetailsReducer\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { error: cardCreationError, success, loading: cardCreationLoading } = createCardReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards } = savedCardsListReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getProductDetails(match.params.id))\n            dispatch(savedCardsList())\n            dispatch({\n                type: CHARGE_CARD_RESET\n            })\n        }\n    }, [dispatch, match, history, success, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    return (\n        <div>\n            {cardCreationError ? <Message variant='danger'>{cardCreationError}</Message> : \"\"}\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Getting Checkout Info</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {!loading && cardCreationLoading ?\n                <span style={{ display: \"flex\" }}>\n                    <h5>Checking your card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span> : \"\"}\n            {error ? <Message variant='danger'>{error}</Message> :\n                <Container>\n                    <Row>\n                        <Col xs={6}>\n                            <h3>Checkout Summary</h3>\n                            <Card className=\"mb-4\">\n                                <Card.Body>\n                                    <Container>\n                                        <Row>\n                                            <Col>\n                                                <Image src={product.image} alt=\"image\" height=\"180\" />\n                                            </Col>\n                                            <Col>\n                                                <h5 className=\"card-title text-capitalize\">\n                                                    {product.name}\n                                                </h5>\n                                                <span className=\"card-text text-success\">₹ {product.price}</span>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n                                </Card.Body>\n                            </Card>\n\n                            <span style={{ display: \"flex\" }}>\n                                <h3>Billing Address</h3>\n                                <Link\n                                    className=\"ml-2 mt-2\"\n                                    to=\"/all-addresses/\"\n                                >\n                                    Edit/Add Address\n                                </Link>\n                            </span>\n                            <UserAddressComponent handleAddressId={handleAddressId} />\n                        </Col>\n                        <Col xs={6}>\n                            <h3>\n                                Payments Section\n                            </h3>\n                            {success ?\n                                <ChargeCardComponent\n                                    selectedAddressId={selectedAddressId}\n                                    addressSelected={addressSelected}\n                                    product={product}\n                                />\n                                :\n                                <CreateCardComponent\n                                    addressSelected={addressSelected}\n                                    stripeCards={stripeCards} />}\n                        </Col>\n                    </Row>\n                </Container>\n            }\n        </div>\n    )\n}\n\nexport default CheckoutPage","import React, { useState } from 'react'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction SearchBarForProducts() {\n\n    let history = useHistory()\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(searchTerm) {\n            history.push(`/?searchTerm=${searchTerm}`)\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder=\"search products\"\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForProducts\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\nimport SearchBarForProducts from './SearchBarForProducts'\n\n\nfunction NavBar() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand><i className=\"mb-2 fas fa-home\"> Home</i></Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n\n                            {/* All Products */}\n                            <LinkContainer to=\"/\">\n                                <Nav.Link >All Products</Nav.Link>\n                            </LinkContainer>\n\n                            {/* New Product (Admins Only) */}\n\n                            {userInfo && userInfo.admin ?\n                                <LinkContainer to=\"/new-product/\">\n                                    <Nav.Link >Add Product</Nav.Link>\n                                </LinkContainer>\n                                : \"\"\n                            }\n\n                                <span className=\"\">\n                                    <SearchBarForProducts />\n                                </span>\n\n                        </Nav>\n\n                        {/* login-logout condition here */}\n\n                        {userInfo ?\n                            <div>\n                                <NavDropdown className=\"navbar-nav text-capitalize\" title={userInfo.username} id='username'>\n                                    <LinkContainer to=\"/account\">\n                                        <NavDropdown.Item>Account Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/all-addresses/\">\n                                        <NavDropdown.Item>Address Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/stripe-card-details/\">\n                                        <NavDropdown.Item>Card Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/all-orders/\">\n                                        <NavDropdown.Item>All Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            </div>\n                            :\n\n                            <LinkContainer to=\"/login\">\n                                <Nav.Link><i className=\"fas fa-user\"></i> Login</Nav.Link>\n                            </LinkContainer>\n                        }\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from 'react-router-dom'\nimport Message from \"./Message\"\n\nconst PaymentStatus = () => {\n    const location = useLocation()\n\n    const renderData = () => {\n\n        try {\n            const boughtData = location.state.detail\n\n            return (\n                <div>\n                    <h3 className=\"text-success\">Payment was Successfull</h3>\n                    <Card className=\"p-3\">\n                        Successfully bought\n                        <br />\n                        <span className=\"mb-2\" style={{ display: \"flex\" }}>\n                            {boughtData.name},\n                            ₹{boughtData.price} <i className=\"text-primary ml-1 mt-1 fas fa-check-circle\"></i>\n                        </span>\n                        <Link to=\"/all-orders/\">Go to orders page</Link>\n                    </Card>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='info'>Payment status not available.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default PaymentStatus\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { login } from '../actions/userActions'\nimport Message from '../components/Message';\n\n\nfunction LoginPage({ history }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { error, userInfo } = userLoginReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>                    \n                    <h1>Sign In</h1>                    \n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='username'>\n                            <Form.Label>\n                                Username\n                    </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"enter username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                    </Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign In</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Do not have an account?\n                    <Link\n                                to={`/register`}\n                            > Register</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default LoginPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { register } from '../actions/userActions'\nimport Message from '../components/Message'\n\nfunction RegisterPage({ history, variant }) {\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userRegisterReducer = useSelector(state => state.userRegisterReducer)\n    const { error, userInfo } = userRegisterReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match!')\n        } else {\n            dispatch(register(username, email, password))\n        }\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h1>Sign Up</h1>\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Username\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"enter your username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>\n                                Email Address\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                placeholder=\"enter your email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='passwordConfirm'>\n                            <Form.Label>\n                                Confirm Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"confirm your password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign Up</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Already have an account?\n                    <Link\n                                to={`/login`}\n                            > Login</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default RegisterPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList, updateStripeCard } from '../actions/cardActions'\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap'\nimport { Spinner } from 'react-bootstrap'\nimport { UPDATE_STRIPE_CARD_RESET } from '../constants'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'   \n\n\nconst CardUpdatePage = () => {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [addressCity, setAddressCity] = useState(\"\")\n    const [addressCountry, setAddressCountry] = useState(\"\")\n    const [addressState, setAddressState] = useState(\"\")\n    const [addressZip, setAddressZip] = useState(\"\")\n    const [customerId, setCustomerId] = useState(\"\")\n    const [cardId, setCardId] = useState(\"\")\n\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // update card reducer\n    const updateStripeCardtReducer = useSelector(state => state.updateStripeCardtReducer)\n    const { success } = updateStripeCardtReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo, success])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (customerId && cardId) {\n            const all_card_data = {\n                card_number: cardNumber,\n                customer_id: customerId,\n                card_id: cardId,\n                exp_month: expMonth,\n                exp_year: expYear,\n                name_on_card: name,\n                address_city: addressCity,\n                address_country: addressCountry,\n                address_state: addressState,\n                address_zip: addressZip\n            }\n            // action\n            dispatch(updateStripeCard(all_card_data))\n        }\n    }\n\n    const setCustomerAndCardIds = (cus_Id, card_Id, c_num) => {\n        setCustomerId(cus_Id)\n        setCardId(card_Id)\n        setCardNumber(c_num)\n    }\n\n    if (success) {\n        alert(\"Card Successfully Updated\")\n        history.push(\"/stripe-card-details\")\n        dispatch({\n            type: UPDATE_STRIPE_CARD_RESET\n        })\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <span\n                        className=\"d-flex justify-content-center\"\n                        style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                        <em>Update Card Details</em>\n                    </span>\n                    {loading && <Spinner animation=\"border\" />}\n                    {stripeCards.map((each, idx) => (\n                        <div key={idx}>\n                            <Card\n                                className=\"p-4 mb-4\"\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                            >\n                                <Form onSubmit={onSubmit}>\n\n                                    <Form.Group controlId='name'>\n                                        <Form.Label>\n                                            Name on Card\n                                        </Form.Label>\n                                        <Form.Control\n                                            autoFocus={true}\n                                            type=\"text\"\n                                            defaultValue={each.name_on_card}\n                                            placeholder=\"full name\"\n                                            onChange={(e) => setName(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='month'>\n                                        <Form.Label>\n                                            Exp Month\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"2\"\n                                            defaultValue={each.exp_month}\n                                            placeholder=\"exp month\"\n                                            onChange={(e) => setExpMonth(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='year'>\n                                        <Form.Label>\n                                            Exp Year\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            defaultValue={each.exp_year}\n                                            placeholder=\"exp year\"\n                                            maxLength=\"4\"\n                                            onChange={(e) => setExpYear(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='city'>\n                                        <Form.Label>\n                                            Address City\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_city}\n                                            placeholder=\"address city\"\n                                            onChange={(e) => setAddressCity(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='country'>\n                                        <Form.Label>\n                                            Address Country\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_country}\n                                            placeholder=\"address country\"\n                                            onChange={(e) => setAddressCountry(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='state'>\n                                        <Form.Label>\n                                            Address State\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_state}\n                                            placeholder=\"address state\"\n                                            onChange={(e) => setAddressState(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='zip'>\n                                        <Form.Label>\n                                            Address Zip\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_zip}\n                                            placeholder=\"address zip\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"6\"\n                                            onChange={(e) => setAddressZip(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant='success'\n                                        onClick={() => setCustomerAndCardIds(each.customer_id, each.card_id, each.card_number)}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm button-focus-css\">\n                                        Save Changes\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        variant='primary'\n                                        onClick={() => history.push(\"/stripe-card-details/\")}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm mt-2 button-focus-css\">\n                                        Cancel\n                                    </Button>\n                                </Form>\n                            </Card>\n                        </div>\n                    ))}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default CardUpdatePage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList } from '../actions/cardActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport Message from \"../components/Message\"\nimport DeleteCardComponent from '../components/DeleteCardComponent'\nimport { useHistory } from 'react-router-dom'\n\n\nconst CardDetailsPage = () => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [userId, setUserId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [deleteCardNumber, setDeleteCardNumber] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // saved cards list reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { success } = deleteSavedCardReducer\n\n\n    // toggle run card delete handler\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    // card deletion message\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Card Information</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {stripeCards.length > 0 ? stripeCards.map((each, idx) => (\n                <div key={idx}>\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name on Card:</Col>\n                            <Col className=\"p-3\">\n                                {each.name_on_card ? <span>\n                                    {each.name_on_card}\n                                </span>\n                                    : \"Not Set\"}\n                            </Col>\n\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Month:</Col>\n                            <Col className=\"p-3\">{each.exp_month ? each.exp_month : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Year:</Col>\n                            <Col className=\"p-3\">{each.exp_year ? each.exp_year : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address City:</Col>\n                            <Col className=\"p-3\">{each.address_city ? each.address_city : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Country:</Col>\n                            <Col className=\"p-3\">{each.address_country ? each.address_country : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address State:</Col>\n                            <Col className=\"p-3\">{each.address_state ? each.address_state : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Zip:</Col>\n                            <Col className=\"p-3\">{each.address_zip ? each.address_zip : \"Not Set\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to=\"/stripe-card-update/\">Update Card details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to=\"#\"\n                            onClick={() => {\n                                setDeleteCardNumber(each.card_number)\n                                setUserId(each.user)\n                                setRunCardDeleteHandler(!runCardDeleteHandler)\n                            }}\n                        >Delete Card</Link>\n                    </span>\n                </div>\n            )) :\n                <div>\n                    <Message variant='info'>Card details not available.</Message>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default CardDetailsPage\n","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, logout, checkTokenValidation } from '../actions/userActions'\n//import { UPDATE_USER_ACCOUNT_RESET } from '../constants'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction AccountPage() {\n\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            try {\n                dispatch(checkTokenValidation())\n                dispatch(userDetails(userInfo.id))\n            } catch (error) {\n                history.push(\"/\")\n            }\n        }\n    }, [history, userInfo, dispatch])\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const renderData = () => {\n        try {\n\n            return (\n                <div>\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Getting User Information</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name:</Col>\n                            <Col className=\"p-3\">{userAccDetails.username}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Email:</Col>\n                            <Col className=\"p-3\">{userAccDetails.email}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Admin Privileges:</Col>\n                            <Col className=\"p-3\">{userAccDetails.admin ? \"Yes\" : \"No\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to={`/account/update`}>Update Account details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to={`/account/delete/`}>Delete Account</Link>\n                    </span>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n\n    return renderData()\n\n}\n\nexport default AccountPage\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, userUpdateDetails, checkTokenValidation, logout } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\nimport { UPDATE_USER_DETAILS_RESET } from '../constants'\n\n\nfunction AccountUpdatePage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n  \n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    // user update details reducer\n    const userDetailsUpdateReducer = useSelector(state => state.userDetailsUpdateReducer)\n    const { success } = userDetailsUpdateReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(userDetails(userInfo.id))\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const updatedUsername = username === \"\" ? userAccDetails.username : username\n        const updatedEmail = email === \"\" ? userAccDetails.email : email\n\n        if (password !== confirmPassword) {\n            alert(\"Passwords do not match\")\n        } else {\n            const userData = {\n                'username': updatedUsername,\n                'email': updatedEmail,\n                'password': password,\n            }\n            dispatch(userUpdateDetails(userData))\n        }\n    }\n\n    // logout\n    const logoutHandler = () => {\n        history.push(\"/login\")\n        dispatch(logout()) // action        \n    }\n\n    if(success) {\n        alert(\"Account successfully updated.\")\n        dispatch({\n            type: UPDATE_USER_DETAILS_RESET\n        })\n        history.push(\"/account/\")\n        dispatch(userDetails(userInfo.id))\n    }\n\n    const renderData = () => {\n        try {\n            return (\n                <div>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6}>\n                            <span\n                                className=\"d-flex justify-content-center\"\n                                style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                                <em>Update User Details</em>\n                            </span>\n                            {loading && <Spinner animation=\"border\" />}\n                            <Form onSubmit={onSubmit}>\n\n                                <Form.Group controlId='username'>\n                                    <Form.Label>\n                                        Username\n                                    </Form.Label>\n                                    <Form.Control\n                                        autoFocus={true}\n                                        type=\"text\"\n                                        defaultValue={userAccDetails.username}\n                                        placeholder=\"username\"\n                                        onChange={(e) => setUsername(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='email'>\n                                    <Form.Label>\n                                        Email Address\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"enter email\"\n                                        defaultValue={userAccDetails.email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='password'>\n                                    <Form.Label>\n                                        Reset-Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"enter new password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='confirmPassword'>\n                                    <Form.Label>\n                                        Confirm Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"confirm new password\"\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Button type=\"submit\" variant='success' className=\"btn-sm\">Save Changes</Button>\n                                <Link to={`/account`}>\n                                    <button className=\"btn btn-primary btn-sm ml-2\" type=\"button\">\n                                        Cancel\n                                    </button>\n                                </Link>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default AccountUpdatePage\n","import React, { useState } from 'react'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout, userAccountDelete, checkTokenValidation } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\nimport { DELETE_USER_ACCOUNT_RESET } from '../constants'\n\n\nfunction DeleteUserAccount() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const [myPassword, setMyPassword] = useState(\"\")\n\n    \n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // delete user account reducer\n    const deleteUserAccountReducer = useSelector(state => state.deleteUserAccountReducer)\n    const { success, loading, error } = deleteUserAccountReducer\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const userData = {\n            \"id\": userInfo.id,\n            \"password\": myPassword\n        }\n        dispatch(checkTokenValidation())        \n        dispatch(userAccountDelete(userData))        \n    }\n    \n    if(success) {\n        alert(\"Account successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ACCOUNT_RESET\n        })\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h3>Confirm your password to delete your account.</h3>\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Please wait</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}                    \n                    {error && <Message variant='danger'>Incorrect Password!</Message>}        \n                    <div className=\"mt-4\">\n                        <Form onSubmit={onSubmit}>\n                            <Form.Group controlId='password'>\n                                <Form.Label>\n                                    Password\n                            </Form.Label>\n                                <Form.Control\n                                    required\n                                    type=\"password\"\n                                    placeholder=\"enter your password\"\n                                    value={myPassword}\n                                    onChange={(e) => setMyPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"danger\">Confirm Delete</Button>\n                        </Form>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default DeleteUserAccount\n","import React, { useState } from 'react'\nimport { Form, Button, Card, InputGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createUserAddress, getAllAddress } from '../actions/userActions'\nimport { CREATE_USER_ADDRESS_RESET } from '../constants'\nimport Message from './Message'\n\n\nconst CreateAddressComponent = ({ toggleCreateAddress }) => {\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // Create User Address Reducer\n    const createUserAddressReducer = useSelector(state => state.createUserAddressReducer)\n    const { success: addressCreationSuccess, error: errorCreatingAddress } = createUserAddressReducer\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const addressData = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(createUserAddress(addressData))\n    }\n\n    if (addressCreationSuccess) {\n        alert(\"Address successfully created.\")\n        toggleCreateAddress()\n        dispatch({\n            type: CREATE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>New Address</em></p>\n            {errorCreatingAddress\n                ? <Message variant='danger'>\n                    {errorCreatingAddress}\n                </Message>\n                :\n                \"\"}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <InputGroup>\n                                <InputGroup.Text>+91</InputGroup.Text>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"phone number\"\n                                    pattern=\"[0-9]+\"\n                                    maxLength=\"10\"\n                                    value={phoneNumber}\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\n                                >\n                                </Form.Control>\n                            </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                value={pinCode}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                value={houseNumber}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                value={landmark}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Address\n                        </Button>\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => toggleCreateAddress()}>\n                            Cancel\n                        </Button>\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default CreateAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap'\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions'\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants'\nimport { useHistory } from 'react-router-dom'\nimport CreateAddressComponent from '../components/CreateAddressComponent'\n\n\nfunction AllAddressesOfUserPage() {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [deleteAddress, setDeleteAddress] = useState(\"\")\n    const [createAddress, setCreateAddress] = useState(false)\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses, loading: loadingAllAddresses } = getAllAddressesOfUserReducer\n\n    // get address list reducer\n    const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer)\n    const { success: addressDeletionSuccess } = deleteUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllAddress())\n            dispatch({\n                type: GET_SINGLE_ADDRESS_RESET\n            })\n        }\n    }, [dispatch, history, userInfo, addressDeletionSuccess])\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    if (addressDeletionSuccess) {\n        alert(\"Address successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    // address deletion handler\n    const deleteAddressHandler = (address) => {\n        setDeleteAddress(address)\n        handleShow()\n    }\n\n    // address delete confirmation\n    const confirmDelete = (id) => {\n        dispatch(deleteUserAddress(id))\n        handleClose()\n    }\n\n    // toggle Create Address Button\n    const toggleCreateAddress = () => {\n        setCreateAddress(!createAddress)\n    }\n\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                                {\" \"}\n                                Delete Confirmation\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            Are you sure you want to delete this address\n                            {\" \"}<em>\"{deleteAddress.house_no}, {deleteAddress.city}, {deleteAddress.state}\"</em>?\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"danger\" onClick={() => confirmDelete(deleteAddress.id)}>\n                                Confirm Delete\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            </div>\n\n            {/* Modal End */}\n\n            {/* loading spinner conditions */}\n\n            {loadingAllAddresses && <span style={{ display: \"flex\" }}>\n                <h5>Getting addresses</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Create Address */}\n            {createAddress ?\n                <div>\n                    <CreateAddressComponent toggleCreateAddress={toggleCreateAddress} />\n                </div>\n                :\n                <button\n                    className=\"btn btn-sm btn-primary mb-2 button-focus-css\"\n                    onClick={() => toggleCreateAddress()}\n                >\n                    Add new address +\n                </button>\n            }\n\n            {addresses && !createAddress ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Phone No: </b>+91 {address.phone_number}</span>\n                        <span><b>Address: </b>{address.house_no},\n                            near {address.landmark}, {address.city}, {address.state},\n                            {address.pin_code}\n\n                            {/* Delete Address Buttton */}\n\n                            <span\n                                onClick={() => deleteAddressHandler(address)}>\n                                <i\n                                    title=\"delete address\"\n                                    className=\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\n                                ></i>\n                            </span>\n\n                            {/* Edit Address Buttton */}\n\n                            <span\n                                onClick={() => history.push(`/all-addresses/${address.id}/`)}>\n                                <i\n                                    title=\"edit address\"\n                                    className=\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\n                                ></i>\n                            </span>\n\n                        </span>\n\n                    </Card>\n                </div>\n            ))\n                :\n                \"\"\n            }\n\n        </div >\n    )\n}\n\nexport default AllAddressesOfUserPage\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport { checkTokenValidation, getAllAddress, getSingleAddress, logout, updateUserAddress } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { UPDATE_USER_ADDRESS_RESET } from '../constants'\n\n\nconst AddressUpdatePage = ({ match }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address, error: errorFetchingAddress } = getSingleAddressReducer\n\n    // get single address reducer    \n    const updateUserAddressReducer = useSelector(state => state.updateUserAddressReducer)\n    const { success: addressUpdateSuccess } = updateUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getSingleAddress(match.params.id))\n        }\n    }, [dispatch, history, userInfo, match])\n\n    // token validation check\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const updatedAddress = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(updateUserAddress(match.params.id, updatedAddress))\n    }\n\n    if(addressUpdateSuccess) {\n        alert(\"Address updated successfully.\")\n        dispatch({\n            type: UPDATE_USER_ADDRESS_RESET\n        })\n        history.push(\"/all-addresses/\")\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>Update Address</em></p>\n            {errorFetchingAddress && <h3>Invalid Address Request</h3>}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                defaultValue={address ? address.name : \"\"}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"phone number\"\n                                pattern=\"[0-9]+\"\n                                maxLength=\"10\"\n                                defaultValue={address ? address.phone_number : \"\"}\n                                onChange={(e) => setPhoneNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                defaultValue={address ? address.pin_code : \"\"}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                defaultValue={address ? address.house_no : \"\"}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                defaultValue={address ? address.landmark : \"\"}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                defaultValue={address ? address.city : \"\"}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                defaultValue={address ? address.state : \"\"}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Changes\n                        </Button>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => history.push(\"/all-addresses/\")}\n                        >\n                            Cancel\n                        </Button>\n\n\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div >\n    )\n}\n\nexport default AddressUpdatePage\n","export const dateCheck = (param) => {\n    //console.log(\"dateCheck ===>\", param)\n    // Example: 2021-01-12\n    const dateValue = param.slice(8, 10);\n    const monthValue = param.slice(5, 7);\n    const yearValue = param.slice(0, 4);\n  \n    switch (monthValue) {\n      case \"01\":\n        return `${dateValue} January ${yearValue}`;\n      case \"02\":\n        return `${dateValue} Feburary ${yearValue}`;\n      case \"03\":\n        return `${dateValue} March ${yearValue}`;\n      case \"04\":\n        return `${dateValue} April ${yearValue}`;\n      case \"05\":\n        return `${dateValue} May ${yearValue}`;\n      case \"06\":\n        return `${dateValue} June ${yearValue}`;\n      case \"07\":\n        return `${dateValue} July ${yearValue}`;\n      case \"08\":\n        return `${dateValue} August ${yearValue}`;\n      case \"09\":\n        return `${dateValue} September ${yearValue}`;\n      case \"10\":\n        return `${dateValue} October ${yearValue}`;\n      case \"11\":\n        return `${dateValue} November ${yearValue}`;\n      case \"12\":\n        return `${dateValue} December ${yearValue}`;\n      default:\n        return null;\n    }\n  };\n","import React, { useState } from 'react'\n\nconst SearchBarForOrdersPage = ({ handleSearchTerm, placeholderValue }) => {\n\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        handleSearchTerm(searchTerm);\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder={placeholderValue}\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForOrdersPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { checkTokenValidation, getAllOrders, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { Table, Spinner } from 'react-bootstrap'\nimport { dateCheck } from '../components/GetDate'\nimport { changeDeliveryStatus } from '../actions/productActions'\nimport { CHANGE_DELIVERY_STATUS_RESET } from '../constants'\nimport SearchBarForOrdersPage from '../components/SearchBarForOrdersPage'\nimport Message from '../components/Message'\n\n\nfunction OrdersListPage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const placeholderValue = \"Search orders by Customer Name, Address or by Ordered Item\"\n\n    const todays_date = dateCheck(new Date().toISOString().slice(0, 10))\n\n    const [currentDateInfo] = useState(todays_date)\n    const [idOfchangeDeliveryStatus, setIdOfchangeDeliveryStatus] = useState(0)\n    const [cloneSearchTerm, setCloneSearchTerm] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get all orders reducer\n    const getAllOrdersReducer = useSelector(state => state.getAllOrdersReducer)\n    const { orders, loading: loadingOrders } = getAllOrdersReducer\n\n    // change delivery status reducer\n    const changeDeliveryStatusReducer = useSelector(state => state.changeDeliveryStatusReducer)\n    const { success: deliveryStatusChangeSuccess, loading: deliveryStatusChangeSpinner } = changeDeliveryStatusReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllOrders())\n        }\n    }, [userInfo, dispatch, history])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const changeDeliveryStatusHandler = (id, status) => {\n        setIdOfchangeDeliveryStatus(id)\n        const productData = {\n            \"is_delivered\": status,\n            \"delivered_at\": status ? currentDateInfo : \"Not Delivered\"\n        }\n        dispatch(changeDeliveryStatus(id, productData))\n    }\n\n    if (deliveryStatusChangeSuccess) {\n        alert(\"Delivery status changed successfully\")\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_RESET\n        })\n        dispatch(getAllOrders())\n    }\n\n    const handleSearchTerm = (term) => {\n        setCloneSearchTerm(term)\n    };\n\n\n    return (\n        <div>\n            {loadingOrders && <span style={{ display: \"flex\" }}>\n                <h5>Getting Orders</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {userInfo.admin && <SearchBarForOrdersPage handleSearchTerm={handleSearchTerm} placeholderValue={placeholderValue} />}\n                {orders.length > 0 ?\n                <Table className=\"mt-2\" striped bordered>\n                    <thead>\n                        <tr className=\"p-3 bg-info text-white text-center\">\n                            <th>Order Id</th>\n                            <th>Customer Name</th>\n                            <th>Card Used</th>\n                            <th>Delivery Address</th>\n                            <th>Ordered Item</th>\n                            <th>Paid Status</th>\n                            <th>Paid On</th>\n                            <th>Total Amount</th>\n                            <th>Delivered Status</th>\n                            <th>Delivered On</th>\n                            {userInfo.admin &&\n                                <th>Delivery Status</th>\n                            }\n                        </tr>\n                    </thead>\n\n                    {/* filter orders by name, address or ordered item */}\n\n                    {orders.filter((item) => (\n\n                        item.name.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.ordered_item.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.address.toLowerCase().includes(cloneSearchTerm)\n                    )\n\n                    ).map((order, idx) => (\n                        <tbody key={idx}>\n                            <tr className=\"text-center\">\n                                <td>\n                                    {order.id}\n                                </td>\n                                <td>{order.name}</td>\n                                <td>{order.card_number}</td>\n                                <td>{order.address}</td>\n                                <td>{order.ordered_item}</td>\n                                <td>{order.paid_status ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{dateCheck(order.paid_at)}</td>\n                                <td>{order.total_price} INR</td>\n                                <td>{order.is_delivered ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{order.delivered_at}</td>\n                                {userInfo.admin &&\n                                    <td>\n                                        {order.is_delivered ?\n                                            <button\n                                                className=\"btn btn-outline-danger btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, false)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as Undelivered\"}\n                                            </button>\n                                            :\n                                            <button\n                                                className=\"btn btn-outline-primary btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, true)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as delivered\"}\n                                            </button>\n                                        }\n                                    </td>\n                                }\n                            </tr>\n                        </tbody>\n                    ))}\n                </Table>\n                : <Message variant=\"info\">No orders yet.</Message> }\n        </div>\n    )\n}\n\nexport default OrdersListPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport { createProduct } from '../actions/productActions'\nimport { useHistory } from 'react-router'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { CREATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message';\n\n\nconst ProductCreatePage = () => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(false)\n    const [image, setImage] = useState(null)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // create product reducer\n    const createProductReducer = useSelector(state => state.createProductReducer)\n    const { product, success: productCreationSuccess, error: productCreationError } = createProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n    }, [dispatch, userInfo, history])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        let form_data = new FormData()\n        form_data.append('name', name)\n        form_data.append('description', description)\n        form_data.append('price', price)\n        form_data.append('stock', stock)\n        form_data.append('image', image)\n\n        dispatch(createProduct(form_data))\n    }\n\n    if (productCreationSuccess) {\n        alert(\"Product successfully created.\")\n        history.push(`/product/${product.id}/`)\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {productCreationError && <Message variant='danger'>{productCreationError.image[0]}</Message>}\n            <span\n                className=\"d-flex justify-content-center text-info\"\n                >\n                <em>New Product</em>\n            </span>\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        autoFocus={true}\n                        type=\"text\"\n                        value={name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        value={description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        value={price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        value={stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css\"\n                >\n                    Save Product\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css\"\n                    onClick={() => history.push(\"/\")}\n                >\n                    Cancel\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default ProductCreatePage\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { getProductDetails, updateProduct } from '../actions/productActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { UPDATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message'\n\n\nconst ProductUpdatePage = ({ match }) => {\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading: loadingPageDetails, product } = productDetailsReducer\n\n    // as our errors will be displayed at the top of the webpage\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(product.stock)\n    const [image, setImage] = useState(\"\")\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [newImage, setNewImage] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // product details reducer\n    const updateProductReducer = useSelector(state => state.updateProductReducer)\n    const {\n        success: productUpdationSuccess,\n        loading: loadingProductUpdations,\n        error: productUpdationError\n    } = updateProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n    \n    // get product details\n    useEffect(() => {\n        if (!userInfo || !userInfo.admin) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(getProductDetails(match.params.id))\n    }, [dispatch, userInfo, history, match])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const productId = product.id\n        let form_data = new FormData()\n        form_data.append('name', name)\n        form_data.append('description', description)\n        form_data.append('price', price)\n        form_data.append('stock', stock)\n        form_data.append('image', image)\n\n        dispatch(updateProduct(productId, form_data))\n    }\n\n    if (productUpdationSuccess) {\n        alert(\"Product successfully updated.\")\n        dispatch({\n            type: UPDATE_PRODUCT_RESET\n        })\n        history.push(`/product/${product.id}`)\n    }\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <span\n                className=\"d-flex justify-content-center text-info\"\n            >\n                <em>Edit Product</em>\n            </span>\n            {productUpdationError ? (\n                <div>\n                    {scrollToTop()}\n                    <Message variant='danger'>{productUpdationError.image[0]}</Message>\n                </div>\n            ) : \"\"}\n            {loadingPageDetails && <span style={{ display: \"flex\" }}>\n                <h5>Getting Product Details</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {loadingProductUpdations ? <span style={{ display: \"flex\" }}>\n                <h5>Updating Product</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span> : \"\"}\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <p>\n                        <img src={product.image} alt={product.name} height=\"200\" />\n                    </p>\n\n                    {newImage ?\n                        <div>\n                            <Form.Control\n                                type=\"file\"\n                                onChange={(e) => setImage(e.target.files[0])}\n                            >\n                            </Form.Control>\n\n                            <span\n                                onClick={() => {\n                                    setNewImage(!newImage)\n                                    setImage(\"\")\n                                    dispatch({\n                                        type: UPDATE_PRODUCT_RESET\n                                    })\n                                }}\n                                className=\"btn btn-primary btn-sm mt-2\"\n                            >\n                                Cancel\n                            </span>\n                        </div>\n                        :\n                        <p>\n                            <span\n                                onClick={() => setNewImage(!newImage)}\n                                className=\"btn btn-success btn-sm\"\n                            >\n                                choose different image\n                            </span>\n                        </p>\n                    }\n                </Form.Group>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        autoFocus={true}\n                        type=\"text\"\n                        defaultValue={product.name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        defaultValue={product.description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        defaultValue={product.price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        defaultChecked={product.stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css mb-4\"\n                >\n                    Save Changes\n                </Button>\n                <Button\n                    onClick={() => history.push(`/product/${product.id}`)}\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css mb-4\"\n                >\n                    Cancel\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default ProductUpdatePage\n","import React from 'react'\nimport Message from '../components/Message'\n\nfunction NotFoundPage() {\n    return (\n        <div>\n            <Message variant='danger'>\n                404 Not Found\n            </Message>\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ProductListPage from './pages/ProductsListPage'\nimport ProductDetailsPage from './pages/ProductDetailsPage'\nimport CheckoutPage from './pages/CheckoutPage'\nimport NavBar from './components/Navbar'\nimport PaymentStatus from './components/PaymentStatus'\nimport Login from './pages/LoginPage'\nimport Register from './pages/RegisterPage'\nimport CardUpdatePage from './pages/CardUpdatePage'\nimport CardDetailsPage from './pages/CardDetailsPage'\nimport AccountPage from './pages/AccountPage'\nimport AccountUpdatePage from './pages/AccountUpdatePage'\nimport DeleteUserAccountPage from './pages/DeleteUserAccountPage'\nimport AllAddressesOfUserPage from './pages/AllAddressesOfUserPage'\nimport AddressUpdatePage from './pages/AddressUpdatePage'\nimport OrdersListPage from './pages/OrdersListPage'\nimport ProductCreatePage from './pages/ProductCreatePage'\nimport ProductUpdatePage from './pages/ProductUpdatePage'\nimport NotFound from './pages/NotFoundPage'\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <div className=\"container mt-4\">\n          <Switch>\n            <Route path=\"/\" component={ProductListPage} exact />\n            <Route path=\"/new-product/\" component={ProductCreatePage} exact />\n            <Route path=\"/product/:id/\" component={ProductDetailsPage} exact />\n            <Route path=\"/product-update/:id/\" component={ProductUpdatePage} exact />\n            <Route path=\"/product/:id/checkout/\" component={CheckoutPage} exact />\n            <Route path=\"/payment-status\" component={PaymentStatus} exact />\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/register\" component={Register} exact />\n            <Route path=\"/account\" component={AccountPage} exact />\n            <Route path=\"/account/update/\" component={AccountUpdatePage} exact />\n            <Route path=\"/account/delete/\" component={DeleteUserAccountPage} exact />\n            <Route path=\"/stripe-card-details\" component={CardDetailsPage} exact />\n            <Route path=\"/stripe-card-update\" component={CardUpdatePage} exact />\n            <Route path=\"/all-addresses/\" component={AllAddressesOfUserPage} exact />\n            <Route path=\"/all-addresses/:id/\" component={AddressUpdatePage} exact />\n            <Route path=\"/all-orders/\" component={OrdersListPage} exact />\n            <Route path=\"\" component={NotFound} exact />\n          </Switch>\n        </div>\n      </Router>\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport \"./App.css\"\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}